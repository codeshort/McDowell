#include <bits/stdc++.h> 
using namespace std; 

struct Node { 
	int data; 
	struct Node* left; 
	struct Node* right; 
	Node(int val) 
	{ 
		data = val; 
		left = NULL; 
		right = NULL; 
	} 
	int checkHeight(Node * root)
	{
	    if(root == NULL)
	    {
	        return -1;
	    }
	    int left = checkHeight(root->left);
	    if(left == -100)
	    {
	        return -100;
	    }
	    int right = checkHeight(root->right);
	    if(right == -100)
	    {
	        return -100;
	    }
	    int diff = left- right;
	    if(abs(diff)>1)
	    {
	        return -100;
	    }
	    else
	    {
	        return max(left,right)+1;
	    }
	}
	
	bool isBalanced(Node* root)
	{
	    return checkHeight(root)!=(-100);
	}
}; 

int main() 
{ 

	/*create root*/
	struct Node* root = new Node(1); 
    Node n = new Node(0);
     
	root->left = new Node(2); 
	root->right = new Node(3); 
	root->left->left = new Node(4); 
	if(n.isBalanced(root))
     cout<<	"true "<<endl;
   else
   {
       cout<<"false "<<endl;
   }
	return 0; 
} 
